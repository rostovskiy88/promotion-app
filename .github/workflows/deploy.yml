name: Build, Test, and Deploy to Firebase

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Unit Tests & Build Verification
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm test -- --watchAll=false --coverage
      env:
        CI: true
        VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
        VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        VITE_OPENWEATHER_API_KEY: ${{ secrets.VITE_OPENWEATHER_API_KEY }}
        
    - name: Build project
      run: npm run build
      env:
        VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
        VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        VITE_OPENWEATHER_API_KEY: ${{ secrets.VITE_OPENWEATHER_API_KEY }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 1

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test
    name: End-to-End Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/

    - name: Start development server
      run: npx vite --port 5173 &
      env:
        VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
        VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        VITE_OPENWEATHER_API_KEY: ${{ secrets.VITE_OPENWEATHER_API_KEY }}

    - name: Wait for server to be ready
      run: npx wait-on http://localhost:5173 --timeout 60000

    - name: Run E2E tests - Authentication
      run: npm run test:auth-errors
      env:
        CYPRESS_BASE_URL: http://localhost:5173
        
    - name: Run E2E tests - Core Features
      run: npx cypress run --spec "cypress/e2e/article-workflow.cy.ts,cypress/e2e/search-infinite-scroll.cy.ts"
      env:
        CYPRESS_BASE_URL: http://localhost:5173
        
    - name: Run E2E tests - User Management
      run: npx cypress run --spec "cypress/e2e/profile-management.cy.ts"
      env:
        CYPRESS_BASE_URL: http://localhost:5173
        
    - name: Run E2E tests - Advanced Features
      run: npx cypress run --spec "cypress/e2e/weather-widget.cy.ts,cypress/e2e/theme-management.cy.ts"
      env:
        CYPRESS_BASE_URL: http://localhost:5173
        
    - name: Run E2E tests - Article Management
      run: npx cypress run --spec "cypress/e2e/article-management-advanced.cy.ts"
      env:
        CYPRESS_BASE_URL: http://localhost:5173
        
    - name: Run E2E tests - PWA Features
      run: npx cypress run --spec "cypress/e2e/pwa-features.cy.ts"
      env:
        CYPRESS_BASE_URL: http://localhost:5173

  deploy:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests]
    name: Deploy to Firebase
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_REACT_PROMOTION_APP }}
        channelId: live
        projectId: react-promotion-app

  notify:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests, deploy]
    if: always()
    name: Slack Notifications
    
    steps:
    - name: Notify Slack on Success
      if: needs.deploy.result == 'success'
      uses: 8398a7/action-slack@v3
      with:
        status: success
        channel: '#deployments'
        text: |
          üöÄ *Deployment Successful!*
          
          *Repository:* ${{ github.repository }}
          *Branch:* ${{ github.ref_name }}
          *Commit:* `${{ github.sha }}`
          *Author:* ${{ github.actor }}
          *Message:* ${{ github.event.head_commit.message }}
          
          üìä *Results:*
          ‚úÖ Unit Tests: ${{ needs.test.result }}
          ‚úÖ Deploy: ${{ needs.deploy.result }}
          
          üåê *Live URL:* https://react-promotion-app.web.app
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify Slack on Failure
      if: contains(needs.*.result, 'failure')
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        channel: '#deployments'
        text: |
          ‚ùå *Deployment Failed!*
          
          *Repository:* ${{ github.repository }}
          *Branch:* ${{ github.ref_name }}
          *Commit:* `${{ github.sha }}`
          *Author:* ${{ github.actor }}
          *Message:* ${{ github.event.head_commit.message }}
          
          üìä *Job Results:*
          Unit Tests: ${{ needs.test.result }}
          E2E Tests: ${{ needs.e2e-tests.result }}
          Deploy: ${{ needs.deploy.result }}
          
          üîó [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 